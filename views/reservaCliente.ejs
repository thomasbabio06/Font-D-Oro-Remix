<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style/style.css" />
    <title>Font D' Oro</title>
</head>

<body id="ReservaCliente">
    <div class='containerPrincipal'>
        <h1>Realiza Tu Reserva</h1>
        <div class="cajaReserva">
            <form id="reservaForm" method="post">
                <div class='bloqueTexto'>
                    <div class="input1">
                        <p>Seleccionar Mesa</p>
                        <button type="button" id="btnAbrirModal">Seleccionar Mesa</button>

                    </div>
                </div>
                <div class='bloqueTexto'>
                    <div class="input6">
                        <p>Mesa Seleccionada</p>
                        <input name="mesaSeleccionada" class="inputMesaSeleccionada" type='text' readonly>
                    </div>
                </div>

                <div class='bloqueTexto'>
                    <div class="inputHorario">
                        <p>Seleccionar Horario</p>
                        <button type="button" id="btnAbrirModalHorario">Seleccionar Horario</button>
                    </div>
                </div>

                <div class='bloqueTexto'>
                    <div class="inputHorarioSeleccionadoDiv">
                        <p>Horario Seleccionado</p>
                        <input name="horarioSeleccionado" class="inputHorarioSeleccionado" type='text' readonly>
                    </div>
                </div>

                <div class='bloqueTexto'>
                    <div class="input3">
                        <p>Tipo de Pago</p>
                        <select name="tipoPago" class="inputTipoPago">
                            <option value="efectivo">Efectivo</option>
                            <option value="tarjeta">Tarjeta</option>
                            <option value="mercadoPago">Mercado Pago</option>
                        </select>
                    </div>
                </div>

                <div class='bloqueTexto'>
                    <div class="input4">
                        <p>Fecha</p>
                        <input name="fecha" class="inputFecha" type='date' required>
                    </div>
                </div>

                <div class='bloqueTexto'>
                    <div class="input5">
                        <p>Cantidad de personas</p>
                        <input name="cantPersonas" class="inputCantPersonas" type='number' min="1" max="10" required>
                    </div>
                </div>

                <input type="hidden" id="restauranteId" name="restauranteId" value="" />

                <div class='botonIngresar'>
                    <input class='botonI' type="submit" value="Confirmar">
                </div>
            </form>
        </div>
    </div>

    <!-- Modal para seleccionar mesas -->
    <div id="mesaModal" class="modal">
        <div class="modal-content">
            <span id="closeModal" class="close">&times;</span>
            <h2>Mesas Disponibles</h2>
            <div id="mesaSelector" class="mesa-selector"></div>
        </div>
    </div>
    <!-- Modal para seleccionar horario -->
    <div id="horarioModal" class="modal">
        <div class="modal-content">
            <span id="closeModalHorario" class="close">&times;</span>
            <h2>Horarios Disponibles</h2>
            <div id="horarioSelector" class="horario-selector"></div>
        </div>
    </div>

    <script>
        // Función para obtener las mesas desde la API
        async function obtenerMesas() {
            try {
                const response = await fetch(`/api/mesas`);
                if (!response.ok) throw new Error('Error al obtener mesas');
                const mesas = await response.json();
                mostrarMesas(mesas);
            } catch (error) {
                console.error('Error:', error);
            }
        }

        // Función para mostrar las mesas en el modal
        function mostrarMesas(mesas) {
    const mesaSelector = document.getElementById('mesaSelector');
    mesaSelector.innerHTML = '';

    mesas.forEach(mesa => {
        const mesaCard = document.createElement('div');
        mesaCard.className = 'mesa-card';
        // Usa el número de mesa para seleccionar la imagen correspondiente
        const imgSrc = `/img/mesa${mesa.numeroMesa}.png`;
        
        mesaCard.innerHTML = `
            <p>Mesa ${mesa.numeroMesa}</p>
            <p>Disponibilidad: ${mesa.disponible ? 'Disponible' : 'No Disponible'}</p>
            <img src="${imgSrc}" alt="Mesa ${mesa.numeroMesa}" onclick="seleccionarMesa(${mesa.numeroMesa})" style="cursor: pointer;">
        `;
        mesaSelector.appendChild(mesaCard);
    });
}

        // Función para manejar la selección de una mesa
        function seleccionarMesa(numeroMesa) {
            const mesaInput = document.querySelector('.inputMesaSeleccionada');
            mesaInput.value = numeroMesa;
            alert(`Mesa ${numeroMesa} seleccionada.`);
            cerrarModal();
        }

        // Función para abrir el modal de mesa
        function abrirModal() {
            document.getElementById('mesaModal').style.display = 'block';
        }

        // Función para cerrar el modal de mesa
        function cerrarModal() {
            document.getElementById('mesaModal').style.display = 'none';
        }

        // Función para abrir el modal de horario
        function abrirModalHorario() {
            document.getElementById('horarioModal').style.display = 'block';
        }

        // Función para cerrar el modal de horario
        function cerrarModalHorario() {
            document.getElementById('horarioModal').style.display = 'none';
        }

        // Función para mostrar horarios en el modal
        function mostrarHorarios(horarios) {
            const horarioSelector = document.getElementById('horarioSelector');
            horarioSelector.innerHTML = '';

            horarios.forEach(horario => {
                const horarioCard = document.createElement('div');
                horarioCard.className = 'horario-card';
                horarioCard.innerHTML = `
                    <p>${horario}</p>
                    <button onclick="seleccionarHorario('${horario}')">Seleccionar</button>
                `;
                horarioSelector.appendChild(horarioCard);
            });
        }

        // Función para manejar la selección de un horario
        function seleccionarHorario(horario) {
            const horarioInput = document.querySelector('.inputHorarioSeleccionado');
            horarioInput.value = horario;
            console.log(horarioInput.value)
            alert(`Horario ${horario} seleccionado.`);
            cerrarModalHorario();
        }

        // Llamar a la función para obtener las mesas al cargar la página
        obtenerMesas();

        // Llamar a la función para mostrar horarios disponibles
        mostrarHorarios(["12:00 PM", "1:00 PM", "2:00 PM", "3:00 PM", "4:00 PM"]);

        // Event listeners para los botones y cierre de modales
        document.getElementById('btnAbrirModal').onclick = abrirModal;
        document.getElementById('closeModal').onclick = cerrarModal;
        document.getElementById('btnAbrirModalHorario').onclick = abrirModalHorario;
        document.getElementById('closeModalHorario').onclick = cerrarModalHorario;

        // Manejar el envío del formulario
        document.getElementById('reservaForm').onsubmit = function (event) {
            event.preventDefault();

            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
            data.restauranteId = "<%=rId%>";

            if (!data.mesaSeleccionada) {
                alert('Por favor, selecciona una mesa antes de confirmar la reserva.');
                return;
            }

            if (!data.horarioSeleccionado) {
                alert('Por favor, selecciona un horario antes de confirmar la reserva.');
                return;
            }

            // Enviar la reserva al servidor
            fetch('/api/reservas', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then(response => {
                    if (response.ok) {
                        alert('Reserva realizada con éxito.');
                        response.json().then(r => {
                            window.location.href = `/reservas/reservaConfirmada/${r._id}`;
                        });
                    } else {
                        return response.json().then(err => { throw new Error(err.error); });
                    }
                })
                .catch(error => {
                    alert('Error al realizar la reserva: ' + error.message);
                    console.error('Error:', error);
                });
        };
    </script>
</body>

</html>